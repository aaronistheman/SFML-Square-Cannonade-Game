Current:
--------

-player movement (use my spacecraft game for reference)
	-transfer input-handling over
		-set flags in handle input
		-react to these flags' values in update()
		-probably need to do the window thing
		-incorporate TimePerFrame in update()
	-center player's origin
-set up static (unmoving) view
-background (below the platform): texture repeating/scrolling

-not sure where to put these notes:
	-SceneNode (probably without parent-child system)
	-scene layers (probably not in the way the book does it)

Eventually:
-----------

-delete the sample files and Game folder
-remove unused/stub files
-use A* pathfinding algorithm to have enemies avoid holes as
they navigate to the player
-look into C++ Boost library
-spritesheets

Considerable:
-------------

-why does State store a pointer--not a reference--to the window?
-could only render squares within a certain distance of any entity,
then make the rest dark, so the player would have to be careful to
avoid holes
-state management
	-remove that boolean check for keepState in Application::processInput()
	-import StateStack classes from "SFML Game Development" book
-enemies with multiple hitboxes, just for the challenge

OOP Classes (incomplete):
------------------------
ResourceHandler
Application/Game
Entity
	Coin
	Cannon
	Square